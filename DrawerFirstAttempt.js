import type {Node} from 'react'; //What is this???
import {View, StyleSheet} from 'react-native';
import React, {useState, useEffect, useRef} from 'react';
import GetLocation from 'react-native-get-location';
import Canvas from 'react-native-canvas';
import useInterval from './useInterval';

/* const testCoords = [
  [-81.261039733887, 28.977882385254],
  [-81.261039733887, 28.977882385254],
  [-81.261070251465, 28.977880477905],
  [-81.261070251465, 28.977880477905],
  [-81.261108398438, 28.977878570557],
  [-81.261169433594, 28.977878570557],
  [-81.261215209961, 28.977872848511],
  [-81.261245727539, 28.977870941162],
  [-81.261276245117, 28.977870941162],
  [-81.261337280273, 28.977867126465],
  [-81.261375427246, 28.977869033813],
  [-81.261421203613, 28.977872848511],
  [-81.261451721191, 28.977876663208],
  [-81.261505126953, 28.977878570557],
  [-81.261558532715, 28.977870941162],
  [-81.261611938477, 28.977861404419],
  [-81.261665344238, 28.977849960327],
  [-81.261726379395, 28.977844238281],
  [-81.261756896973, 28.977844238281],
  [-81.261810302734, 28.97784614563],
  [-81.261840820313, 28.977848052979],
  [-81.261894226074, 28.977849960327],
  [-81.261947631836, 28.977855682373],
  [-81.262008666992, 28.977853775024],
  [-81.262054443359, 28.977851867676],
  [-81.262107849121, 28.977855682373],
  [-81.262161254883, 28.977853775024],
  [-81.262214660645, 28.977848052979],
  [-81.262260437012, 28.977844238281],
  [-81.262306213379, 28.977840423584],
  [-81.262359619141, 28.977840423584],
  [-81.262413024902, 28.977842330933],
  [-81.262451171875, 28.977844238281],
  [-81.262512207031, 28.977840423584],
  [-81.262557983398, 28.977838516235],
  [-81.26261138916, 28.977842330933],
  [-81.262664794922, 28.977842330933],
  [-81.262718200684, 28.977842330933],
  [-81.262771606445, 28.977840423584],
  [-81.262825012207, 28.977840423584],
  [-81.262878417969, 28.977842330933],
  [-81.262924194336, 28.977844238281],
  [-81.262969970703, 28.977848052979],
  [-81.26301574707, 28.977855682373],
  [-81.263069152832, 28.977861404419],
  [-81.263130187988, 28.977861404419],
  [-81.26318359375, 28.977861404419],
  [-81.263229370117, 28.977861404419],
  [-81.263282775879, 28.977863311768],
  [-81.263328552246, 28.97785949707],
  [-81.263381958008, 28.977855682373],
  [-81.26343536377, 28.977853775024],
  [-81.263488769531, 28.977853775024],
  [-81.263542175293, 28.977855682373],
  [-81.26358795166, 28.977851867676],
  [-81.263648986816, 28.977848052979],
  [-81.263694763184, 28.977848052979],
  [-81.263732910156, 28.977848052979],
  [-81.263786315918, 28.97784614563],
  [-81.26383972168, 28.97784614563],
  [-81.263893127441, 28.977849960327],
  [-81.263946533203, 28.977861404419],
  [-81.26399230957, 28.977874755859],
  [-81.264030456543, 28.977891921997],
  [-81.264068603516, 28.977916717529],
  [-81.264099121094, 28.977952957153],
  [-81.264129638672, 28.977994918823],
  [-81.264144897461, 28.978021621704],
  [-81.264152526855, 28.978048324585],
  [-81.264152526855, 28.978076934814],
  [-81.264152526855, 28.978130340576],
  [-81.264144897461, 28.978170394897],
  [-81.264137268066, 28.978223800659],
  [-81.264129638672, 28.97825050354],
  [-81.264122009277, 28.978298187256],
  [-81.264122009277, 28.978326797485],
  [-81.264106750488, 28.978378295898],
  [-81.264099121094, 28.97843170166],
  [-81.264083862305, 28.978479385376],
  [-81.26407623291, 28.978527069092],
  [-81.264068603516, 28.978572845459],
  [-81.264053344727, 28.978622436523],
  [-81.264038085938, 28.978670120239],
  [-81.264022827148, 28.978715896606],
  [-81.264015197754, 28.978761672974],
  [-81.264007568359, 28.978790283203],
  [-81.264007568359, 28.978837966919],
  [-81.264007568359, 28.978883743286],
  [-81.263999938965, 28.978935241699],
  [-81.26399230957, 28.978982925415],
  [-81.263977050781, 28.979026794434],
  [-81.263961791992, 28.979072570801],
  [-81.263954162598, 28.979122161865],
  [-81.263954162598, 28.979167938232],
  [-81.263954162598, 28.979209899902],
  [-81.263946533203, 28.979257583618],
  [-81.263938903809, 28.979303359985],
  [-81.26392364502, 28.979345321655],
  [-81.263916015625, 28.979389190674],
  [-81.263916015625, 28.979427337646],
  [-81.263916015625, 28.979427337646],
  [-81.263916015625, 28.979455947876],
  [-81.263954162598, 28.979454040527],
  [-81.263946533203, 28.979423522949],
  [-81.263916015625, 28.979427337646],
  [-81.263954162598, 28.979396820068],
  [-81.26399230957, 28.979410171509],
  [-81.264015197754, 28.97945022583],
  [-81.264015197754, 28.97945022583],
  [-81.264015197754, 28.97945022583],
  [-81.264022827148, 28.979475021362],
  [-81.264060974121, 28.979513168335],
  [-81.264091491699, 28.979539871216],
  [-81.264122009277, 28.979558944702],
  [-81.264167785645, 28.979570388794],
  [-81.264205932617, 28.979570388794],
  [-81.264251708984, 28.979566574097],
  [-81.264305114746, 28.979566574097],
  [-81.264350891113, 28.979572296143],
  [-81.26441192627, 28.979578018188],
  [-81.264442443848, 28.979579925537],
  [-81.264495849609, 28.979585647583],
  [-81.264549255371, 28.979587554932],
  [-81.264595031738, 28.979600906372],
  [-81.264656066895, 28.979612350464],
  [-81.264686584473, 28.979616165161],
  [-81.264747619629, 28.979619979858],
  [-81.264778137207, 28.979621887207],
  [-81.264831542969, 28.979629516602],
  [-81.264869689941, 28.979635238647],
  [-81.26490020752, 28.979644775391],
  [-81.264938354492, 28.979652404785],
  [-81.26496887207, 28.979658126831],
  [-81.264999389648, 28.97966003418],
  [-81.265029907227, 28.97966003418],
  [-81.265068054199, 28.97966003418],
  [-81.265129089355, 28.979661941528],
  [-81.265159606934, 28.979663848877],
  [-81.265213012695, 28.979667663574],
  [-81.265251159668, 28.979675292969],
  [-81.265296936035, 28.979688644409],
  [-81.265327453613, 28.979696273804],
  [-81.265380859375, 28.979703903198],
  [-81.265426635742, 28.979707717896],
  [-81.26545715332, 28.979709625244],
  [-81.265502929688, 28.979705810547],
  [-81.265556335449, 28.979700088501],
  [-81.265609741211, 28.979696273804],
  [-81.265663146973, 28.979700088501],
  [-81.265716552734, 28.97970199585],
  [-81.265747070313, 28.979700088501],
  [-81.265785217285, 28.979698181152],
  [-81.265815734863, 28.979696273804],
  [-81.265869140625, 28.979682922363],
  [-81.265914916992, 28.979669570923],
  [-81.265968322754, 28.979658126831],
  [-81.266021728516, 28.979648590088],
  [-81.266075134277, 28.979629516602],
  [-81.266120910645, 28.979604721069],
  [-81.266166687012, 28.979579925537],
  [-81.26619720459, 28.979568481445],
  [-81.266235351563, 28.97954750061],
  [-81.26628112793, 28.979522705078],
  [-81.266326904297, 28.9794921875],
  [-81.26636505127, 28.979461669922],
  [-81.266403198242, 28.979459762573],
  [-81.26643371582, 28.979461669922],
  [-81.266479492188, 28.979459762573],
  [-81.266510009766, 28.979454040527],
  [-81.266540527344, 28.97943687439],
  [-81.266578674316, 28.979421615601],
  [-81.266624450684, 28.979417800903],
  [-81.266662597656, 28.979417800903],
  [-81.266708374023, 28.979413986206],
  [-81.266746520996, 28.979415893555],
  [-81.266792297363, 28.979415893555],
  [-81.266845703125, 28.979415893555],
  [-81.266891479492, 28.979421615601],
  [-81.266944885254, 28.979423522949],
  [-81.266975402832, 28.979423522949],
  [-81.267036437988, 28.979425430298],
  [-81.26708984375, 28.979429244995],
  [-81.267143249512, 28.979425430298],
  [-81.26717376709, 28.979421615601],
  [-81.267211914063, 28.979419708252],
  [-81.26725769043, 28.979419708252],
  [-81.267311096191, 28.979423522949],
  [-81.267364501953, 28.979423522949],
  [-81.267417907715, 28.979425430298],
  [-81.267471313477, 28.979419708252],
  [-81.267517089844, 28.979396820068],
  [-81.267555236816, 28.979375839233],
  [-81.267517089844, 28.979362487793],
  [-81.267478942871, 28.97936630249],
  [-81.267440795898, 28.979370117188],
  [-81.26741027832, 28.979373931885],
  [-81.267349243164, 28.979379653931],
  [-81.267295837402, 28.979383468628],
  [-81.267242431641, 28.979381561279],
  [-81.267211914063, 28.979379653931],
  [-81.267166137695, 28.979377746582],
  [-81.267166137695, 28.979377746582],
  [-81.267127990723, 28.979373931885],
  [-81.267166137695, 28.979377746582],
  [-81.267127990723, 28.979373931885],
  [-81.26708984375, 28.979379653931],
  [-81.265129089355, 28.979572296143],
  [-81.265129089355, 28.979572296143],
  [-81.265129089355, 28.979572296143],
  [-81.265129089355, 28.979572296143],
  [-81.265151977539, 28.979549407959],
  [-81.265098571777, 28.979551315308],
  [-81.265098571777, 28.979551315308],
  [-81.265098571777, 28.979551315308],
  [-81.265037536621, 28.979555130005],
  [-81.264984130859, 28.979562759399],
  [-81.264938354492, 28.979570388794],
  [-81.264892578125, 28.979583740234],
  [-81.264831542969, 28.979585647583],
  [-81.264778137207, 28.979568481445],
  [-81.264724731445, 28.979553222656],
  [-81.264678955078, 28.979541778564],
  [-81.264625549316, 28.97953414917],
  [-81.26456451416, 28.979532241821],
  [-81.264518737793, 28.979524612427],
  [-81.264465332031, 28.979516983032],
  [-81.26441192627, 28.979511260986],
  [-81.264350891113, 28.97950553894],
  [-81.264312744141, 28.979499816895],
  [-81.264259338379, 28.979494094849],
  [-81.264205932617, 28.9794921875],
  [-81.26416015625, 28.979484558105],
  [-81.264106750488, 28.97947883606],
  [-81.264060974121, 28.979475021362],
  [-81.264007568359, 28.979469299316],
  [-81.263954162598, 28.979454040527],
  [-81.263931274414, 28.979421615601],
  [-81.26392364502, 28.979372024536],
  [-81.26392364502, 28.979345321655],
  [-81.263931274414, 28.979316711426],
  [-81.263938903809, 28.979288101196],
  [-81.263938903809, 28.979261398315],
  [-81.263946533203, 28.979228973389],
  [-81.263954162598, 28.979192733765],
  [-81.263961791992, 28.979160308838],
  [-81.263961791992, 28.979125976563],
  [-81.263961791992, 28.979099273682],
  [-81.263961791992, 28.979066848755],
  [-81.263961791992, 28.979034423828],
  [-81.263969421387, 28.978992462158],
  [-81.263984680176, 28.978940963745],
  [-81.263999938965, 28.978887557983],
  [-81.264007568359, 28.978858947754],
  [-81.264007568359, 28.978818893433],
  [-81.264015197754, 28.978775024414],
  [-81.264022827148, 28.978721618652],
  [-81.264030456543, 28.978694915771],
  [-81.264038085938, 28.978668212891],
  [-81.264045715332, 28.978639602661],
  [-81.264053344727, 28.978588104248],
  [-81.264060974121, 28.978544235229],
  [-81.264060974121, 28.978504180908],
  [-81.264060974121, 28.978467941284],
  [-81.264060974121, 28.978422164917],
  [-81.264068603516, 28.978384017944],
  [-81.26407623291, 28.978343963623],
  [-81.264083862305, 28.978296279907],
  [-81.264091491699, 28.97825050354],
  [-81.264091491699, 28.97820854187],
  [-81.264091491699, 28.97820854187],
  [-81.264099121094, 28.978172302246],
  [-81.264106750488, 28.978128433228],
  [-81.264114379883, 28.978090286255],
  [-81.264114379883, 28.978052139282],
  [-81.264106750488, 28.978021621704],
  [-81.264099121094, 28.977989196777],
  [-81.26407623291, 28.977941513062],
  [-81.264068603516, 28.977912902832],
  [-81.264053344727, 28.977886199951],
  [-81.264030456543, 28.977865219116],
  [-81.264007568359, 28.977844238281],
  [-81.263969421387, 28.977832794189],
  [-81.263931274414, 28.977825164795],
  [-81.263885498047, 28.977807998657],
  [-81.263832092285, 28.977792739868],
  [-81.263786315918, 28.977785110474],
  [-81.263732910156, 28.977785110474],
  [-81.263687133789, 28.977783203125],
  [-81.263656616211, 28.977785110474],
  [-81.263603210449, 28.977796554565],
  [-81.263572692871, 28.97780418396],
  [-81.263519287109, 28.977806091309],
  [-81.263473510742, 28.97780418396],
  [-81.263427734375, 28.977800369263],
  [-81.263374328613, 28.97780418396],
  [-81.263320922852, 28.977809906006],
  [-81.263282775879, 28.977813720703],
  [-81.263229370117, 28.9778175354],
  [-81.263175964355, 28.977821350098],
  [-81.263122558594, 28.977825164795],
  [-81.263076782227, 28.977828979492],
  [-81.263031005859, 28.977830886841],
  [-81.262977600098, 28.977828979492],
  [-81.26293182373, 28.977827072144],
  [-81.262878417969, 28.977827072144],
  [-81.262832641602, 28.977830886841],
  [-81.26277923584, 28.977836608887],
  [-81.262733459473, 28.977844238281],
  [-81.262702941895, 28.977849960327],
  [-81.262733459473, 28.977844238281],
  [-81.262702941895, 28.977849960327],
  [-81.2626953125, 28.977823257446],
  [-81.262657165527, 28.977807998657],
  [-81.262619018555, 28.977819442749],
  [-81.262580871582, 28.977832794189],
  [-81.262550354004, 28.977836608887],
  [-81.262504577637, 28.977836608887],
  [-81.26245880127, 28.977830886841],
  [-81.262420654297, 28.977825164795],
  [-81.26237487793, 28.977825164795],
  [-81.262329101563, 28.977828979492],
  [-81.262283325195, 28.977830886841],
  [-81.262245178223, 28.977828979492],
  [-81.262199401855, 28.977828979492],
  [-81.262145996094, 28.977832794189],
  [-81.262092590332, 28.977834701538],
  [-81.26203918457, 28.977834701538],
  [-81.261985778809, 28.977836608887],
  [-81.261940002441, 28.977840423584],
  [-81.261878967285, 28.977840423584],
  [-81.261825561523, 28.977840423584],
  [-81.261772155762, 28.977836608887],
  [-81.26171875, 28.977834701538],
  [-81.26171875, 28.977834701538],
]; */

export default function Drawer() {
  const [path, setPath] = useState([]);
  const [canvasDimensions, setCanvasDimensions] = useState([150, 300]);
  const canvasRef = React.useRef(null);

  function getCanvasDimensions(event) {
    const {width, height} = event.nativeEvent.layout;
    setCanvasDimensions([width, height]);
  }

  useEffect(() => {
    const canvas = canvasRef.current;
    canvas.width = canvasDimensions[0];
    canvas.height = canvasDimensions[1];
    const ctx = canvas.getContext('2d');

    let minX, minY, maxX, maxY;
    path.forEach((p, i) => {
      if (i === 0) {
        minX = maxX = p[0];
        minY = maxY = p[1];
      } else {
        minX = Math.min(p[0], minX);
        minY = Math.min(p[1], minY);
        maxX = Math.max(p[0], maxX);
        maxY = Math.max(p[1], maxY);
      }
    });

    const constrainingDimension = Math.min(canvas.width, canvas.height);

    function getScaledX(x) {
      const position = (x - minX) / (maxX - minX);
      return constrainingDimension * position;
    }
    function getScaledY(y) {
      const position = (y - minY) / (maxY - minY);
      return constrainingDimension * position;
    }

    ctx.lineWidth = 5;
    ctx.strokeStyle = 'red';
    ctx.beginPath();
    path.forEach(p => {
      ctx.lineTo(getScaledX(p[0]), getScaledY(p[1]));
    });
    ctx.stroke();
  });

  useInterval(() => {
    GetLocation.getCurrentPosition({
      enableHighAccuracy: true,
      timeout: 15000,
    })
      .then(location => {
        const latestCoordinates = [[location.longitude, location.latitude]];
        console.log(location);
        setPath(path.concat(latestCoordinates));
      })
      .catch(error => {
        const {code, message} = error;
        console.warn(code, message);
      });
  }, 1000);

  return (
    <View onLayout={getCanvasDimensions}>
      <Canvas style={styles.canvas} ref={canvasRef} />
    </View>
  );
}

const styles = StyleSheet.create({
  canvas: {
    width: '100%',
    height: '100%',
  },
});

/*
I did...
npm install react-native-webview
react-native link react-native-webview
npm install react-native-canvas

and got...
warn Calling react-native link [packageName] is deprecated in favor of autolinking. It will be removed in the next major release.
Autolinking documentation: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md 
*/
